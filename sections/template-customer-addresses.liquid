<div x-data="{ newForm: false }">
  <h1>My addresses</h1>

  <button x-on:click="newForm = true">Create new address</button>

  <div
    x-cloak
    x-show="newForm"
   
    >
    <button
      x-on:click="newForm = false"
     
    >Close</button>
    {% render 'component-address-form', address: customer.new_address, main_cta: 'Create address' %}
  </div>
</div>

{% paginate customer.addresses by 10 %}
  <div>
    {% for address in customer.addresses %}
      {% assign formId = 'addressForm' | append: address.id %}
      <div x-data="{ {{ formId }}: false }">
        {{ address | format_address }}

        {% if address == customer.default_address %}
          <b>Default</b>
        {% endif %}

        <button x-on:click="{{ formId }} = true">Edit</button>
        <button
          x-on:click=""
          data-delete-address
          data-url="{{ address.url }}"
          >Delete</button>

        <form action="{{ address.url }}" method="post">
          <input type="hidden" name="_method" value="delete" >
        </form>

        <div
          x-cloak
          x-show="{{formId}}"
         
          >
          <button
            x-on:click="{{ formId }} = false"
           
          >Close</button>
          {% render 'component-address-form', address: address, main_cta: 'Save address' %}
        </div>
      </div>
    {% endfor %}
  </div>

  {% render 'pagination', paginate: paginate %}
{% endpaginate %}

<script>
  class CustomerAddress {
    constructor () {
      this.initialize()
      this.addressesSelector()
      this.initializeDeleteAddressButtons()
    }

    initialize () {
      const allAddressesSelector = document.querySelectorAll('select[data-country-selector]')
      if (!allAddressesSelector.length) {
        return
      }

      allAddressesSelector.forEach(select => {
        const selectedCountry = this.getSelectedCountry(select)
        if (!selectedCountry) {
          return
        }

        const provinces = JSON.parse(selectedCountry.dataset.provinces)

        const provinceSelector = document.querySelector(`#province-${select.dataset.formId}`)
        console.log("provinceSelector", provinceSelector)

        if (!provinces.length) {
          provinceSelector.setAttribute('disabled', 'disabled')
        } else {
          provinceSelector.removeAttribute('disabled')
        }

        provinceSelector.innerHTML = ''

        for (let index = 0; index < provinces.length; index++) {
          if (provinces[index][0] === provinceSelector.getAttribute('value')) {
            provinceSelector.innerHTML += `<option selected value="${provinces[index][0]}">${provinces[index][1]}</option>`
          } else {
            provinceSelector.innerHTML += `<option value="${provinces[index][0]}">${provinces[index][1]}</option>`
          }
        }
      })
    }

    getSelectedCountry (select) {
      let selectedOption
      for (let index = 0; index < select.options.length; index++) {
        const option = select.options[index];
        if (option.value === select.getAttribute('value')) {
          selectedOption = option
          selectedOption.setAttribute('selected', 'selected')
          break
        }
      }
      return selectedOption
    }

    addressesSelector () {
      const allAddressesSelector = document.querySelectorAll('select[data-country-selector]')
      if (!allAddressesSelector.length) {
        return
      }

      allAddressesSelector.forEach(select => {
        select.addEventListener('change', function (e) {
          const provinces = JSON.parse(this.options[this.selectedIndex].dataset.provinces)
          console.log("updated", provinces)
          const provinceSelector = document.querySelector(`#province-${this.dataset.formId}`)

          if (!provinces.length) {
            provinceSelector.setAttribute('disabled', 'disabled')
          } else {
            provinceSelector.removeAttribute('disabled')
          }

          provinceSelector.innerHTML = ''

          for (let index = 0; index < provinces.length; index++) {
            if (provinces[index][0] === provinceSelector.getAttribute('value')) {
              provinceSelector.innerHTML += `<option selected value="${provinces[index][0]}">${provinces[index][1]}</option>`
            } else {
              provinceSelector.innerHTML += `<option value="${provinces[index][0]}">${provinces[index][1]}</option>`
            }
          }
        })
      })
    }

    initializeDeleteAddressButtons () {
      const deleteButtons = document.querySelectorAll("button[data-delete-address]")
      if (!deleteButtons.length) {
        return
      }

      deleteButtons.forEach(button => {
        button.addEventListener('click', function (e) {
          const form = document.querySelector(`form[action="${this.dataset.url}"]`)
          if (!form) {
            return
          }

          const confirmation = window.confirm("Do you want to delete this address?")
          if (confirmation) {
            form.submit()
          }
        })
      })
    }
  }

  const customerAddress = new CustomerAddress()
</script>