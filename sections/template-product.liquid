<!-- 4 types of media - photo, video, embedded video (YT), 3d models -->

<!-- swiper -->
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.css"
/>
<script async id="swiper-script" src="https://cdn.jsdelivr.net/npm/swiper@8/swiper-bundle.min.js"></script>
{{ 'template-product.css' | asset_url | stylesheet_tag }}

<style>
  .swiper-button-prev, .swiper-button-next {
    height: 20px;
    color: #000;
    /* top: auto; */
  }
  .swiper-button-prev::after, .swiper-button-next::after {
    font-size: 20px;
    font-weight: bold;
  }
  /* .swiper-pagination {
    bottom: 0 !important;
  } */
  .swiper-pagination-bullet-active {
    background-color: #000;
  }
</style>


<div class="template-product">
  <!-- media -->
  <div>
    <div class="desktop-only">
      {% for media in product.media %}
        <div>
          {% render 'product-media', media: media %}
        </div>
      {% endfor %}
    </div>

    <div class="mobile-only">
      <!-- swiper carousel -->
      <div class="swiper">
        <div class="swiper-wrapper">
          {% for media in product.media %}
            <div class="swiper-slide">
              <div>
                {% render 'product-media', media: media %}
              </div>
            </div>
          {% endfor %}
        </div>

        <!-- swiper controls -->
        <div class="swiper-pagination"></div>
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
      </div>
    </div>
  </div>
  
  <!-- information -->
  <div class="product--information">
    
    {% form 'product', product, id: 'product-form', novalidate: 'novalidate' %}
      {% assign selected_variant = product.selected_or_first_available_variant %}

      <input type="hidden" name="id" value="{{ selected_variant.id }}">

      <div class="product--info-1">
        <div class="product--title-vendor">
          <div class="product--title ">{{ product.title }}</div>
          <div class="product--vendor">{{ product.vendor }}</div>
        </div>

        <div id="price-{{ section.id }}" class="product--price-wrapper">
          {% if selected_variant.compare_at_price > selected_variant.price %}
            <div class="product--sale-sign">On Sale!</div>
          {% endif %}
          <div class="product--actual-price">{{ selected_variant.price | money }}</div>
          <div class="product--marked-price">{{ selected_variant.compare_at_price | money }}</div>
        </div>
      </div>

      {% unless product.has_only_default_variant %}
        <variant-selector
          data-url="{{ product.url }}"
          data-section="{{ section.id }}"
        >
          {% for option in product.options_with_values %}
            <div class="product--variant">
              <label for="option-{{ section.id }}-{{ forloop.index0 }}" class="product--variant-label">
                {{ option.name }}
              </label>
              <select
                name="options[{{ option.name | escape }}]"
                id="option-{{ section.id }}-{{ forloop.index0 }}"
                class="product--variant-options"
              >
                {% for value in option.values %}
                  <option
                    value="{{ value | escape }}"
                    {% if option.selected_value == value %}
                      selected="selected"
                    {% endif %}
                  >
                    {{ value | escape }}
                  </option>
                {% endfor %}
              </select>

              <script type="application/json">
                {{ product.variants | json }}
              </script>
            </div>

          {% endfor %}
        </variant-selector>
      {% endunless %}

      <div class="product--description">{{ product.description }}</div>

      <div class="product--checkout-buttons">
        {% if selected_variant.available %}
          <quantity-selector class="product--quantity-selector">
            <button data-qtyslctr="decrement" type="button">-</button>
            <input type="number" name="quantity" value="1" min="1" id="quantity-{{ section.id }}">
            <button data-qtyslctr="increment" type="button">+</button>
          </quantity-selector>

          <button id="AddToCart" type="submit" name="add" class="product--add-to-cart-cta">
            Add to cart
          </button>
        {% else %}
          Sold out!
        {% endif %}
        <!-- <button type="submit">
          Checkout
        </button> -->
      </div>

      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'vendor' %}
            <div>{{ product.vendor }}</div>
          
          {% when 'title' %}
            <h1>{{ product.title }}</h1>
          
          {% when 'price' %}
            <div id="price-{{ section.id }}">
              <div>{{ selected_variant.compare_at_price | money }}</div>
              <div>{{ selected_variant.price | money }}</div>
              {% if selected_variant.compare_at_price > selected_variant.price %}
                <span>On Sale!</span>
              {% endif %}
            </div>
          
          {% when 'variant_selector' %}
            {% unless product.has_only_default_variant %}
              <variant-selector
                data-url="{{ product.url }}"
                data-section="{{ section.id }}"
              >
                {% for option in product.options_with_values %}
                  <label for="option-{{ section.id }}-{{ forloop.index0 }}">{{ option.name }}</label>
                  <div>
                    <select
                      name="options[{{ option.name | escape }}]"
                      id="option-{{ section.id }}-{{ forloop.index0 }}"
                    >
                      {% for value in option.values %}
                        <option
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}
                            selected="selected"
                          {% endif %}
                        >
                          {{ value | escape }}
                        </option>
                      {% endfor %}
                    </select>
                  </div>

                  <script type="application/json">
                    {{ product.variants | json }}
                  </script>

                {% endfor %}
              </variant-selector>
            {% endunless %}
          
          {% when 'quantity' %}
            <div>
              {% comment %} <label for="quantity-{{ section.id }}">Quantity</label>
              <input type="number" name="quantity" value="1" min="1" id="quantity-{{ section.id }}"> {% endcomment %}
            </div>
          
          {% when 'description' %}
            <div>{{ product.description }}</div>
          
          {% when 'checkout_buttons' %}
            <div>
              {% if selected_variant.available %}
                <button type="submit" name="add">
                  Add to cart
                </button>
              {% else %}
                Sold out!
              {% endif %}
              <!-- <button type="submit">
                Checkout
              </button> -->
            </div>
          
          {% else %}
            <div>Unknown block!</div>
        {% endcase %}
      {% endfor %}
      
    {% endform %}
  </div>
</div>

<script>
  class QuantitySelector extends HTMLElement {
    constructor () {
      super()
      this.addEventListener('click', this.onClick)
    }

    onClick (e) {
      const button = e.target.dataset['qtyslctr']
      // exit if increment / decrement button is not clicked
      if (!button) {
        return
      }

      // fetch input field
      const inputField = document.getElementById('quantity-{{ section.id }}')
      if (!inputField) {
        return
      }
      
      if (button === "increment") {
        inputField.value++
      } else if (button === "decrement") {
        inputField.value > 1 && inputField.value--
      }
    }
  }
  customElements.define("quantity-selector", QuantitySelector)
</script>

<script>
  class VariantSelector extends HTMLElement {
    constructor () {
      super()
      this.addEventListener('change', this.onChange)
    }

    onChange (data) {
      this.getSelectedOptions()
      this.getSelectedVariant()
      if (this.currentVariant) {
        this.updateUrl()
        this.updateFormId()
        this.updatePrice()
      }
    }

    getSelectedOptions () {
      this.options = Array.from(this.querySelectorAll('select'), select => select.value)
    }

    getSelectedVariant () {
      this.currentVariant = this.getVariantJson().find(variant => {
        const findings = !variant.options.map((option, index) => this.options[index] === option)
          .includes(false)

        if (findings) {
          return variant
        }
      })
    }

    getVariantJson () {
      this.variantData = this.variantData || JSON.parse(this.querySelector('[type="application/json"]').textContent)
      return this.variantData
    }

    updateUrl () {
      window.history.replaceState({}, '', `${this.dataset.url}?variant=${this.currentVariant.id}`)
    }

    updateFormId () {
      const form = document.querySelector('#product-form')
      const input = form.querySelector('input[name="id"')

      input.value = this.currentVariant.id
    }

    updatePrice () {
      fetch(`${this.dataset.url}?variant=${this.currentVariant.id}&section_id=${this.dataset.section}`)
        .then(res => res.text())
        .then(text => {
          const html = new DOMParser().parseFromString(text, 'text/html')
          
          const id = `price-${this.dataset.section}`
          const oldPrice = document.getElementById(id)
          const newPrice = html.getElementById(id)

          if (oldPrice && newPrice) {
            oldPrice.innerHTML = newPrice.innerHTML
          }
        })
    }
  }
  
  customElements.define("variant-selector", VariantSelector)
</script>

<script defer>
  const script = document.getElementById('swiper-script')
  if (script) {
    script.addEventListener('load', () => {
      const swiper = new Swiper('.swiper', {
        direction: 'horizontal',
        pagination: {
          el: '.swiper-pagination'
        },
        navigation: {
          prevEl: '.swiper-button-prev',
          nextEl: '.swiper-button-next'
        }
      })
    })
    script.addEventListener('error', () => console.warn('Failed to load Swiper JS'))
  }
</script>

{% schema %}
{
  "name": "Template Product",
  "blocks": [
    {
      "type": "vendor",
      "name": "Vendor",
      "limit": 1
    },
    {
      "type": "title",
      "name": "Title",
      "limit": 1
    },
    {
      "type": "price",
      "name": "Price",
      "limit": 1
    },
    {
      "type": "variant_selector",
      "name": "Variant selector",
      "limit": 1
    },
    {
      "type": "quantity",
      "name": "Quantity",
      "limit": 1
    },
    {
      "type": "description",
      "name": "Description",
      "limit": 1
    },
    {
      "type": "checkout_buttons",
      "name": "Checkout buttons",
      "limit": 1
    }
  ]
}
{% endschema %}